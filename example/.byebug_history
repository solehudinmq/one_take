exit
response_key = "#{IDEMPOTENCY_KEY_PREFIX}#{idempotency_key}"
idempotency_key
exit
idempotency_key
exit
abc = { 'status': 'success', 'data': result.to_json }
abc[:status]
abc.keys
abc['status']
abc.status
abc = { 'status': 'success', 'data': result.to_json }
{ 'status': 'success', 'data': result.to_json }
c
cached_response
c
cached_response
exit
result[:status]
result.status
result
{ data: JSON.parse(result['data']), message: result['status'] }
exit
{ data: JSON.parse(result['data']), message: result['status'] }
{ data: JSON.parse(result['data']), message: result['status'] }\
result['data']
exit
result[:status]
result.keys
result
result.class
JSON.parse result
result.class
result
result["status"]
result['status']
result.status
result.class
result
result.data
.data
result
result['data']
JSON.parse
exit
result['status']
result.status
result
exit
include OneTake
require 'one_take'
